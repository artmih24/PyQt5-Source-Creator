# auto-generated source-code file Telegram_logo_128.py with Pycture
# Pycture developed by
#    ____             _             _ _     ____  _  _
#   / __ \  __ _ _ __| |_ _ __ ___ (_) |__ |___ \| || |
#  / / _` |/ _` | '__| __| '_ ` _ \| | '_ \  __) | || |_
# | | (_| | (_| | |  | |_| | | | | | | | | |/ __/|__   _|
#  \ \__,_|\__,_|_|   \__|_| |_| |_|_|_| |_|_____|  |_|
#   \____/

from PyQt5 import QtGui
import base64
import os

def Get_telegram_logo(image_str):
    ImageStr = base64.b64decode(image_str)
    with open("telegram_logo.png", "wb") as telegram_logo_text:
        telegram_logo_text.write(ImageStr)
    telegram_logo_text.close()
    qi = QtGui.QPixmap("telegram_logo.png")
    os.remove("telegram_logo.png")
    return(qi)
        
telegram_logo_str = "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"